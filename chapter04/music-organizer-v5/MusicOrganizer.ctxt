#BlueJ class context
comment0.params=
comment0.target=MusicOrganizer()
comment0.text=\n\ Create\ a\ MusicOrganizer\n
comment1.params=filename
comment1.target=void\ addFile(java.lang.String)
comment1.text=\n\ Add\ a\ track\ file\ to\ the\ collection.\n\ @param\ filename\ The\ file\ name\ of\ the\ track\ to\ be\ added.\n
comment10.params=artist
comment10.target=void\ listByArtist(java.lang.String)
comment10.text=\n\ List\ all\ tracks\ by\ the\ given\ artist.\n\ @param\ artist\ The\ artist's\ name.\n
comment11.params=index
comment11.target=void\ removeTrack(int)
comment11.text=\n\ Remove\ a\ track\ from\ the\ collection.\n\ @param\ index\ The\ index\ of\ the\ track\ to\ be\ removed.\n
comment12.params=input
comment12.target=void\ removeTrackByName(java.lang.String)
comment12.text=\n\ ex\ 4.39\ v1\n\ \n\ Remove\ a\ track\ from\ the\ collection\ by\ searchin\ for\ a\ string.\n\ @param\ input\ The\ index\ of\ the\ track\ to\ be\ removed.\n\ \n\ \ has\ an\ error\ because\ of\ no\ iterator,\ removes\ successfully\ but\ the\ arraylist\ finds\ a\ null\ where\n\ \ the\ old\ object\ was\ -\ so\ an\ error\!\n
comment13.params=input
comment13.target=void\ removeTrackByNameWithIterator(java.lang.String)
comment13.text=\n\ ex\ 4.39\ v2\ -\ Search\ the\ filenames\ of\ stored\ tracks\ and\ delete\ if\ found.\n
comment14.params=
comment14.target=void\ playFirst()
comment14.text=\n\ Play\ the\ first\ track\ in\ the\ collection,\ if\ there\ is\ one.\n
comment15.params=
comment15.target=void\ stopPlaying()
comment15.text=\n\ Stop\ the\ player.\n
comment16.params=index
comment16.target=boolean\ indexValid(int)
comment16.text=\n\ Determine\ whether\ the\ given\ index\ is\ valid\ for\ the\ collection.\n\ Print\ an\ error\ message\ if\ it\ is\ not.\n\ @param\ index\ The\ index\ to\ be\ checked.\n\ @return\ true\ if\ the\ index\ is\ valid,\ false\ otherwise.\n
comment17.params=folderName
comment17.target=void\ readLibrary(java.lang.String)
comment18.params=index\ input
comment18.target=void\ setGenre(int,\ java.lang.String)
comment18.text=\n\ ex\ 4.37\ -\ setting\ a\ genre\n
comment19.params=
comment19.target=void\ playRandomTrack()
comment19.text=\n\ ex\ 4.43\ select\ and\ play\ a\ random\ track\n
comment2.params=track
comment2.target=void\ addTrack(Track)
comment2.text=\n\ Add\ a\ track\ to\ the\ collection.\n\ @param\ track\ The\ track\ to\ be\ added.\n
comment20.params=
comment20.target=void\ playAllTracksRandomlyOnceVer1()
comment20.text=\n\ ex\ 4.45\ select\ and\ play\ a\ random\ track,\ but\ play\ all\ tracks\ in\ the\ list\ and\ only\ once\ each.\ using\ loops\n\ doesn't\ work\ properly\n
comment21.params=
comment21.target=void\ playAllTracksRandomlyOnceVer2()
comment21.text=\n\ ex\ 4.45\ select\ and\ play\ a\ random\ track,\ but\ play\ all\ tracks\ in\ the\ list\ and\ only\ once\ each.\ \n\ using\ collections.shuffle\ method\n
comment22.params=
comment22.target=void\ playAllTracksRandomlyOnceVer3()
comment22.text=\n\ ex\ 4.45\ select\ and\ play\ a\ random\ track,\ but\ play\ all\ tracks\ in\ the\ list\ and\ only\ once\ each.\ using\ loops\n\ rewrite\ of\ version\ 1\ into\ a\ while\ loop\ -\ will\ work\ fine\ if\ nothing\ is\ played\ first\n
comment23.params=
comment23.target=void\ playAllTracksRandomlyOnceVer4()
comment23.text=\n\ ex\ 4.45\ select\ and\ play\ a\ random\ track,\ but\ play\ all\ tracks\ in\ the\ list\ and\ only\ once\ each.\ using\ loops\n\ rewrite\ of\ version\ 3\ into\ a\ different\ while\ loop\n
comment3.params=index
comment3.target=void\ playTrack(int)
comment3.text=\n\ Play\ a\ track\ in\ the\ collection.\n\ @param\ index\ The\ index\ of\ the\ track\ to\ be\ played.\n
comment4.params=
comment4.target=int\ getNumberOfTracks()
comment4.text=\n\ Return\ the\ number\ of\ tracks\ in\ the\ collection.\n\ @return\ The\ number\ of\ tracks\ in\ the\ collection.\n
comment5.params=index
comment5.target=void\ listTrack(int)
comment5.text=\n\ List\ a\ track\ from\ the\ collection.\n\ @param\ index\ The\ index\ of\ the\ track\ to\ be\ listed.\n
comment6.params=
comment6.target=void\ listAllTracksForEachLoop()
comment6.text=\n\ Show\ a\ list\ of\ all\ the\ tracks\ in\ the\ collection.\n
comment7.params=
comment7.target=void\ listAllFilesWhileLoop()
comment7.text=\n\ list\ all\ files\ in\ a\ while\ loop\n
comment8.params=
comment8.target=void\ listAllFilesForLoop()
comment8.text=\ ex\ 4.83\n\ list\ all\ files\ in\ a\ while\ loop\n
comment9.params=
comment9.target=void\ listAllTracksWithIterator()
comment9.text=\n\ list\ all\ tracks\ using\ iterator\n\ \n\ Iterator<elementType>\ it\ (variableName)\ \=\ collectionName.iterator();\n\ while\ (it.hasNext())\ (Iterator\ method)\ {\n\ \ \ \ \ elementType\ loopVariable\ \=\ variableName.next();\ (Iterator\ Method)\n\ \ \ \ \ System.out.println(loopVariable\ storing\ object.call\ stored\ object\ method());\n\ \ \ \ \ }\n\ \ \ \ \ \n\ \n
numComments=24
